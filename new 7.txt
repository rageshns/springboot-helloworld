<project name="P13N-Sample-Plugin" default="all" basedir=".">
	<description>P13N Sample Plugin Project</description>
    		
	<property name="build" location="build" />
	<property name="build-classes" location="build/classes" />
	<property name="build-jars" location="build/jars" />
	<property name="jar-name" value="princess-p13n-geoloc" />
	<property name="src" location="src" />
	
	<target name="all" depends="clean,jar" description="Cleans and Builds" />
	
	<target name="jar" depends="compile" description="Creates the jar to be put in WEB-INF/lib">
		<buildnumber/>
        <mkdir dir="${build-jars}"/>
        <jar jarfile="${build-jars}/${jar-name}.jar" >
            <manifest>
                <attribute name="Specification-Title" value="${ant.project.name}" />
                <attribute name="Implementation-Title" value="${ant.project.name}" />
                <attribute name="Implementation-Version" value="1.0" />
                <attribute name="Implementation-Vendor" value="Percussion Solutions" />
                <attribute name="Implementation-Vendor-Id" value="com.percussion" />
                <attribute name="Package-Vendor" value="Percussion Software" />
                <attribute name="Package-Version" value="${build.number}" />
                <attribute name="Built-By" value="${user.name}"/>
            </manifest>
            <metainf dir="${build}">
                <include name="ivy.xml"/>
            </metainf>
        	<fileset dir="${build-classes}">
        		<include name="**"/>
        		<exclude name="log4j.properties"/>
        		<exclude name="test/**" />
        	</fileset>
        </jar>
	</target>
	
	<target name="compile" description="Compiles java code.">
        <mkdir dir="${build-classes}" />
        <javac srcdir="${src}" destdir="${build-classes}" 
            debug="true" source="1.5" classpathref="classpath-all" target="1.5"/>
        <copy todir="${build-classes}">
            <fileset dir="${src}">
            	<!--  <include name="**/*.xml"/> -->            	
                <include name="**/*.properties" />
            </fileset>
        </copy>
	</target>
	
	<target name="clean" description="Cleans the project">
		<delete dir="${build}" />
	</target>
	
	<target name="test" description="Runs the Unit tests" depends="compile">
		<test>
			<files>
			    <include name="**/**Test.class" />
			</files>
		</test>
		<fail if="junit-failed" message="Unit tests failed"/>
		<fail if="junit-error" message="Unit tests failed"/>
	</target>
	
	   <macrodef name="test">
	        <attribute name="fork" default="no" />
	        <attribute name="type" default="unit" />
	        <element name="files" optional="no"/>
	        <element name="classpaths" optional="yes" />
	        <sequential>
	            <property name="build-test-@{type}-results" location="${build}/test-@{type}-results" />
	            <echo>Running @{type}s. Output here: ${build-test-@{type}-results} </echo>
	            <mkdir dir="${build-test-@{type}-results}" />
	            <!-- 
	            Sometimes you have to fork junit. 
	            Usually this is classpath issues.
	            If that is the case try ant -noclasspath -Djunit-fork=false test
	            -->
	            <junit printsummary="true" fork="@{fork}"
	                failureproperty="junit-failed" errorproperty="junit-error">
	                <classpath>
	                    <path refid="classpath-all" />
	                </classpath>
	                <formatter type="plain" usefile="false" />
	                <formatter type="xml" usefile="true" />
	                <batchtest todir="${build-test-@{type}-results}">
	                    <fileset dir="${build-classes}">
	                        <files />
	                    </fileset>
	                </batchtest>
	            </junit>
	        </sequential>
	    </macrodef>
	
	<path id="classpath-all">
		<fileset dir="lib">
			<include name="**.jar"/>
		</fileset>
		<path location="${build-classes}"/>
	</path>

</project>